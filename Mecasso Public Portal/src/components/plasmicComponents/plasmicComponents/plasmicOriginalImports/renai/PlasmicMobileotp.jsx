// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: q7hWdoDc5Fm3y1TqrPvEG7
// Component: aJHYoZ0dnS1
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import TextInput from "../../../TextInput"; // plasmic-import: QSTyVh7IuMa/component
import Successmessage from "../../../Successmessage"; // plasmic-import: Hz33POcv8Jw/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_renai.module.css"; // plasmic-import: q7hWdoDc5Fm3y1TqrPvEG7/projectcss
import sty from "./PlasmicMobileotp.module.css"; // plasmic-import: aJHYoZ0dnS1/css

export const PlasmicMobileotp__VariantProps = new Array(
  "fotpverification",
  "phoneverificationsuccess",
  "emailverification",
  "mobileotpsuccess",
  "socialloginkyc"
);

export const PlasmicMobileotp__ArgProps = new Array(
  "errormessage2",
  "errormessage3"
);

function PlasmicMobileotp__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    hasVariant(variants, "emailverification", "emailverification")
      ? true
      : hasVariant(
          variants,
          "phoneverificationsuccess",
          "phoneverificationsuccess"
        )
      ? true
      : true
  ) ? (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root,
        {
          [sty.rootemailverification]: hasVariant(
            variants,
            "emailverification",
            "emailverification"
          ),

          [sty.rootfotpverification]: hasVariant(
            variants,
            "fotpverification",
            "fotpverification"
          ),

          [sty.rootmobileotpsuccess]: hasVariant(
            variants,
            "mobileotpsuccess",
            "mobileotpsuccess"
          ),

          [sty.rootphoneverificationsuccess]: hasVariant(
            variants,
            "phoneverificationsuccess",
            "phoneverificationsuccess"
          )
        }
      )}
    >
      {(
        hasVariant(variants, "socialloginkyc", "socialloginkyc")
          ? false
          : hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : true
      ) ? (
        <TextInput
          data-plasmic-name={"firstname"}
          data-plasmic-override={overrides.firstname}
          className={classNames("__wab_instance", sty.firstname, {
            [sty.firstnameemailverification]: hasVariant(
              variants,
              "emailverification",
              "emailverification"
            ),

            [sty.firstnamefotpverification]: hasVariant(
              variants,
              "fotpverification",
              "fotpverification"
            ),

            [sty.firstnamemobileotpsuccess]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            ),

            [sty.firstnamephoneverificationsuccess]: hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            ),

            [sty.firstnamesocialloginkyc]: hasVariant(
              variants,
              "socialloginkyc",
              "socialloginkyc"
            )
          })}
          isDisabled={true}
        />
      ) : null}
      {(
        hasVariant(variants, "socialloginkyc", "socialloginkyc")
          ? false
          : hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : true
      ) ? (
        <TextInput
          data-plasmic-name={"lastname"}
          data-plasmic-override={overrides.lastname}
          className={classNames("__wab_instance", sty.lastname, {
            [sty.lastnameemailverification]: hasVariant(
              variants,
              "emailverification",
              "emailverification"
            ),

            [sty.lastnamefotpverification]: hasVariant(
              variants,
              "fotpverification",
              "fotpverification"
            ),

            [sty.lastnamemobileotpsuccess]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            ),

            [sty.lastnamephoneverificationsuccess]: hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            ),

            [sty.lastnamesocialloginkyc]: hasVariant(
              variants,
              "socialloginkyc",
              "socialloginkyc"
            )
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "socialloginkyc", "socialloginkyc")
          ? false
          : hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : true
      ) ? (
        <TextInput
          data-plasmic-name={"username"}
          data-plasmic-override={overrides.username}
          className={classNames("__wab_instance", sty.username, {
            [sty.usernameemailverification]: hasVariant(
              variants,
              "emailverification",
              "emailverification"
            ),

            [sty.usernamefotpverification]: hasVariant(
              variants,
              "fotpverification",
              "fotpverification"
            ),

            [sty.usernamemobileotpsuccess]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            ),

            [sty.usernamephoneverificationsuccess]: hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            ),

            [sty.usernamesocialloginkyc]: hasVariant(
              variants,
              "socialloginkyc",
              "socialloginkyc"
            )
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : true
      ) ? (
        <TextInput
          data-plasmic-name={"email"}
          data-plasmic-override={overrides.email}
          className={classNames("__wab_instance", sty.email, {
            [sty.emailemailverification]: hasVariant(
              variants,
              "emailverification",
              "emailverification"
            ),

            [sty.emailfotpverification]: hasVariant(
              variants,
              "fotpverification",
              "fotpverification"
            ),

            [sty.emailmobileotpsuccess]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            ),

            [sty.emailphoneverificationsuccess]: hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : true
      ) ? (
        <TextInput
          data-plasmic-name={"phonenumber"}
          data-plasmic-override={overrides.phonenumber}
          className={classNames("__wab_instance", sty.phonenumber, {
            [sty.phonenumberemailverification]: hasVariant(
              variants,
              "emailverification",
              "emailverification"
            ),

            [sty.phonenumberfotpverification]: hasVariant(
              variants,
              "fotpverification",
              "fotpverification"
            ),

            [sty.phonenumbermobileotpsuccess]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            ),

            [sty.phonenumberphoneverificationsuccess]: hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : true
      ) ? (
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__mPtMl,
            {
              [sty.textemailverification__mPtMLrHKxX]: hasVariant(
                variants,
                "emailverification",
                "emailverification"
              ),

              [sty.textfotpverification__mPtMlgcg23]: hasVariant(
                variants,
                "fotpverification",
                "fotpverification"
              ),

              [sty.textmobileotpsuccess__mPtMLjHaY]: hasVariant(
                variants,
                "mobileotpsuccess",
                "mobileotpsuccess"
              ),

              [sty.textphoneverificationsuccess__mPtMlQuRg8]: hasVariant(
                variants,
                "phoneverificationsuccess",
                "phoneverificationsuccess"
              )
            }
          )}
        >
          {"An OTP has been sent to your registered mobile number"}
        </div>
      ) : null}
      {(
        hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : true
      ) ? (
        <TextInput
          data-plasmic-name={"mobileotp"}
          data-plasmic-override={overrides.mobileotp}
          className={classNames("__wab_instance", sty.mobileotp, {
            [sty.mobileotpemailverification]: hasVariant(
              variants,
              "emailverification",
              "emailverification"
            ),

            [sty.mobileotpfotpverification]: hasVariant(
              variants,
              "fotpverification",
              "fotpverification"
            ),

            [sty.mobileotpmobileotpsuccess]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            ),

            [sty.mobileotpphoneverificationsuccess]: hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : false
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__dtbJq, {
            [sty.freeBoxemailverification__dtbJqrHKxX]: hasVariant(
              variants,
              "emailverification",
              "emailverification"
            ),

            [sty.freeBoxfotpverification__dtbJqGcg23]: hasVariant(
              variants,
              "fotpverification",
              "fotpverification"
            ),

            [sty.freeBoxmobileotpsuccess__dtbJqjHaY]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            ),

            [sty.freeBoxphoneverificationsuccess__dtbJqQuRg8]: hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          })}
        >
          {p.renderPlasmicSlot({
            defaultContents: "Phone number verified successfully",
            value: args.errormessage2,
            className: classNames(sty.slotTargetErrormessage2)
          })}
        </div>
      ) : null}
      {(
        hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : hasVariant(variants, "emailverification", "emailverification")
          ? true
          : hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          ? true
          : hasVariant(variants, "fotpverification", "fotpverification")
          ? true
          : false
      ) ? (
        <div
          className={classNames(projectcss.all, sty.freeBox___0El1B, {
            [sty.freeBoxemailverification___0El1BrHKxX]: hasVariant(
              variants,
              "emailverification",
              "emailverification"
            ),

            [sty.freeBoxfotpverification___0El1Bgcg23]: hasVariant(
              variants,
              "fotpverification",
              "fotpverification"
            ),

            [sty.freeBoxmobileotpsuccess___0El1BjHaY]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            ),

            [sty.freeBoxphoneverificationsuccess___0El1BQuRg8]: hasVariant(
              variants,
              "phoneverificationsuccess",
              "phoneverificationsuccess"
            )
          })}
        >
          {p.renderPlasmicSlot({
            defaultContents: "Phone number verified successfully",
            value: args.errormessage3,
            className: classNames(sty.slotTargetErrormessage3)
          })}
        </div>
      ) : null}
      {(
        hasVariant(variants, "mobileotpsuccess", "mobileotpsuccess")
          ? true
          : true
      ) ? (
        <Successmessage
          data-plasmic-name={"successmessage"}
          data-plasmic-override={overrides.successmessage}
          className={classNames("__wab_instance", sty.successmessage, {
            [sty.successmessagemobileotpsuccess]: hasVariant(
              variants,
              "mobileotpsuccess",
              "mobileotpsuccess"
            )
          })}
          errormessage={
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__f1Vwp
              )}
            >
              {"Phone number verified successfully"}
            </div>
          }
        />
      ) : null}
    </p.Stack>
  ) : null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "firstname",
    "lastname",
    "username",
    "email",
    "phonenumber",
    "mobileotp",
    "successmessage"
  ],

  firstname: ["firstname"],
  lastname: ["lastname"],
  username: ["username"],
  email: ["email"],
  phonenumber: ["phonenumber"],
  mobileotp: ["mobileotp"],
  successmessage: ["successmessage"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicMobileotp__ArgProps,
      internalVariantPropNames: PlasmicMobileotp__VariantProps
    });

    return PlasmicMobileotp__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicMobileotp";
  } else {
    func.displayName = `PlasmicMobileotp.${nodeName}`;
  }
  return func;
}

export const PlasmicMobileotp = Object.assign(
  // Top-level PlasmicMobileotp renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    firstname: makeNodeComponent("firstname"),
    lastname: makeNodeComponent("lastname"),
    username: makeNodeComponent("username"),
    email: makeNodeComponent("email"),
    phonenumber: makeNodeComponent("phonenumber"),
    mobileotp: makeNodeComponent("mobileotp"),
    successmessage: makeNodeComponent("successmessage"),
    // Metadata about props expected for PlasmicMobileotp
    internalVariantProps: PlasmicMobileotp__VariantProps,
    internalArgProps: PlasmicMobileotp__ArgProps
  }
);

export default PlasmicMobileotp;
/* prettier-ignore-end */
