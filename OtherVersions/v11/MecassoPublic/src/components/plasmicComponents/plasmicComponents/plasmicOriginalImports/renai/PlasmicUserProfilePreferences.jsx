// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: q7hWdoDc5Fm3y1TqrPvEG7
// Component: sc1IlmyR3T
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import ScreenAlert from "../../../ScreenAlert"; // plasmic-import: laQG7AfxmqV/component
import Preferencecard from "../../../Preferencecard"; // plasmic-import: uQIJj5y4N9/component
import Button from "../../../Button"; // plasmic-import: hUmGidH7taW/component
import { useScreenVariants as useScreenVariantsifq4PdpMk2Y } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: IFQ4PdpMK2Y/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_renai.module.css"; // plasmic-import: q7hWdoDc5Fm3y1TqrPvEG7/projectcss
import sty from "./PlasmicUserProfilePreferences.module.css"; // plasmic-import: sc1IlmyR3T/css

export const PlasmicUserProfilePreferences__VariantProps = new Array(
  "creatorpref"
);

export const PlasmicUserProfilePreferences__ArgProps = new Array();

function PlasmicUserProfilePreferences__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsifq4PdpMk2Y()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root,
            {
              [sty.rootcreatorpref]: hasVariant(
                variants,
                "creatorpref",
                "creatorpref"
              )
            }
          )}
        >
          {(hasVariant(globalVariants, "screen", "desktop") ? true : true) ? (
            <ScreenAlert
              data-plasmic-name={"screenAlert"}
              data-plasmic-override={overrides.screenAlert}
              className={classNames("__wab_instance", sty.screenAlert)}
            />
          ) : null}

          <div
            data-plasmic-name={"text"}
            data-plasmic-override={overrides.text}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text,
              {
                [sty.textcreatorpref]: hasVariant(
                  variants,
                  "creatorpref",
                  "creatorpref"
                )
              }
            )}
          >
            {hasVariant(variants, "creatorpref", "creatorpref")
              ? "You prefer to follow creators who are"
              : "You prefer to follow content related to"}
          </div>

          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"freeBox"}
              data-plasmic-override={overrides.freeBox}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox, {
                [sty.freeBoxcreatorpref]: hasVariant(
                  variants,
                  "creatorpref",
                  "creatorpref"
                )
              })}
            >
              {(
                hasVariant(variants, "creatorpref", "creatorpref") ? true : true
              ) ? (
                <Preferencecard
                  data-plasmic-name={"art"}
                  data-plasmic-override={overrides.art}
                  className={classNames("__wab_instance", sty.art, {
                    [sty.artcreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Influencers"
                    : "Art"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref")
                  ? true
                  : false
              ) ? (
                <Preferencecard
                  data-plasmic-name={"influencers"}
                  data-plasmic-override={overrides.influencers}
                  className={classNames("__wab_instance", sty.influencers, {
                    [sty.influencerscreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Influencers"
                    : "Art"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref") ? true : true
              ) ? (
                <Preferencecard
                  data-plasmic-name={"music"}
                  data-plasmic-override={overrides.music}
                  className={classNames("__wab_instance", sty.music, {
                    [sty.musiccreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Blogger"
                    : "Music"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref")
                  ? true
                  : false
              ) ? (
                <Preferencecard
                  data-plasmic-name={"blogger"}
                  data-plasmic-override={overrides.blogger}
                  className={classNames("__wab_instance", sty.blogger, {
                    [sty.bloggercreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Blogger"
                    : "Music"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref") ? true : true
              ) ? (
                <Preferencecard
                  data-plasmic-name={"dance"}
                  data-plasmic-override={overrides.dance}
                  className={classNames("__wab_instance", sty.dance, {
                    [sty.dancecreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Celebrity"
                    : "Dance"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref")
                  ? true
                  : false
              ) ? (
                <Preferencecard
                  data-plasmic-name={"celebrity"}
                  data-plasmic-override={overrides.celebrity}
                  className={classNames("__wab_instance", sty.celebrity, {
                    [sty.celebritycreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Celebrity"
                    : "Dance"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref") ? true : true
              ) ? (
                <Preferencecard
                  data-plasmic-name={"sports"}
                  data-plasmic-override={overrides.sports}
                  className={classNames("__wab_instance", sty.sports, {
                    [sty.sportscreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Young Stars"
                    : "Sports"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref")
                  ? true
                  : false
              ) ? (
                <Preferencecard
                  data-plasmic-name={"youngstars"}
                  data-plasmic-override={overrides.youngstars}
                  className={classNames("__wab_instance", sty.youngstars, {
                    [sty.youngstarscreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Young Stars"
                    : "Sports"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref") ? true : true
              ) ? (
                <Preferencecard
                  data-plasmic-name={"gaming"}
                  data-plasmic-override={overrides.gaming}
                  className={classNames("__wab_instance", sty.gaming, {
                    [sty.gamingcreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Comets"
                    : "Gaming"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref")
                  ? true
                  : false
              ) ? (
                <Preferencecard
                  data-plasmic-name={"comets"}
                  data-plasmic-override={overrides.comets}
                  className={classNames("__wab_instance", sty.comets, {
                    [sty.cometscreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {hasVariant(variants, "creatorpref", "creatorpref")
                    ? "Comets"
                    : "Gaming"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref") ? true : true
              ) ? (
                <Preferencecard
                  data-plasmic-name={"skits"}
                  data-plasmic-override={overrides.skits}
                  className={classNames("__wab_instance", sty.skits, {
                    [sty.skitscreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {"Skits"}
                </Preferencecard>
              ) : null}
              {(
                hasVariant(variants, "creatorpref", "creatorpref") ? true : true
              ) ? (
                <Preferencecard
                  data-plasmic-name={"food"}
                  data-plasmic-override={overrides.food}
                  className={classNames("__wab_instance", sty.food, {
                    [sty.foodcreatorpref]: hasVariant(
                      variants,
                      "creatorpref",
                      "creatorpref"
                    )
                  })}
                >
                  {"Food"}
                </Preferencecard>
              ) : null}
            </p.Stack>
          ) : null}
          {(
            hasVariant(variants, "creatorpref", "creatorpref") ? true : true
          ) ? (
            <Button
              data-plasmic-name={"submitprefbutton"}
              data-plasmic-override={overrides.submitprefbutton}
              className={classNames("__wab_instance", sty.submitprefbutton, {
                [sty.submitprefbuttoncreatorpref]: hasVariant(
                  variants,
                  "creatorpref",
                  "creatorpref"
                )
              })}
            />
          ) : null}
          {(
            hasVariant(variants, "creatorpref", "creatorpref") ? true : true
          ) ? (
            <Button
              data-plasmic-name={"nextprefbutton"}
              data-plasmic-override={overrides.nextprefbutton}
              className={classNames("__wab_instance", sty.nextprefbutton, {
                [sty.nextprefbuttoncreatorpref]: hasVariant(
                  variants,
                  "creatorpref",
                  "creatorpref"
                )
              })}
            />
          ) : null}
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "screenAlert",
    "text",
    "freeBox",
    "art",
    "influencers",
    "music",
    "blogger",
    "dance",
    "celebrity",
    "sports",
    "youngstars",
    "gaming",
    "comets",
    "skits",
    "food",
    "submitprefbutton",
    "nextprefbutton"
  ],

  screenAlert: ["screenAlert"],
  text: ["text"],
  freeBox: [
    "freeBox",
    "art",
    "influencers",
    "music",
    "blogger",
    "dance",
    "celebrity",
    "sports",
    "youngstars",
    "gaming",
    "comets",
    "skits",
    "food"
  ],

  art: ["art"],
  influencers: ["influencers"],
  music: ["music"],
  blogger: ["blogger"],
  dance: ["dance"],
  celebrity: ["celebrity"],
  sports: ["sports"],
  youngstars: ["youngstars"],
  gaming: ["gaming"],
  comets: ["comets"],
  skits: ["skits"],
  food: ["food"],
  submitprefbutton: ["submitprefbutton"],
  nextprefbutton: ["nextprefbutton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicUserProfilePreferences__ArgProps,
      internalVariantPropNames: PlasmicUserProfilePreferences__VariantProps
    });

    return PlasmicUserProfilePreferences__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicUserProfilePreferences";
  } else {
    func.displayName = `PlasmicUserProfilePreferences.${nodeName}`;
  }
  return func;
}

export const PlasmicUserProfilePreferences = Object.assign(
  // Top-level PlasmicUserProfilePreferences renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    screenAlert: makeNodeComponent("screenAlert"),
    text: makeNodeComponent("text"),
    freeBox: makeNodeComponent("freeBox"),
    art: makeNodeComponent("art"),
    influencers: makeNodeComponent("influencers"),
    music: makeNodeComponent("music"),
    blogger: makeNodeComponent("blogger"),
    dance: makeNodeComponent("dance"),
    celebrity: makeNodeComponent("celebrity"),
    sports: makeNodeComponent("sports"),
    youngstars: makeNodeComponent("youngstars"),
    gaming: makeNodeComponent("gaming"),
    comets: makeNodeComponent("comets"),
    skits: makeNodeComponent("skits"),
    food: makeNodeComponent("food"),
    submitprefbutton: makeNodeComponent("submitprefbutton"),
    nextprefbutton: makeNodeComponent("nextprefbutton"),
    // Metadata about props expected for PlasmicUserProfilePreferences
    internalVariantProps: PlasmicUserProfilePreferences__VariantProps,
    internalArgProps: PlasmicUserProfilePreferences__ArgProps
  }
);

export default PlasmicUserProfilePreferences;
/* prettier-ignore-end */
