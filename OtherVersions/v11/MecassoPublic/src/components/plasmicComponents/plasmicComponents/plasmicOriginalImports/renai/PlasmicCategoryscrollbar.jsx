// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: q7hWdoDc5Fm3y1TqrPvEG7
// Component: oTgTnp5r1lc
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import LbCategoryButton from "../../../LbCategoryButton"; // plasmic-import: 9kwQ9FvLYN/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_renai.module.css"; // plasmic-import: q7hWdoDc5Fm3y1TqrPvEG7/projectcss
import sty from "./PlasmicCategoryscrollbar.module.css"; // plasmic-import: oTgTnp5r1lc/css

export const PlasmicCategoryscrollbar__VariantProps = new Array(
  "loggedin",
  "creatormode"
);

export const PlasmicCategoryscrollbar__ArgProps = new Array();

function PlasmicCategoryscrollbar__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root,
        {
          [sty.rootcreatormode]: hasVariant(
            variants,
            "creatormode",
            "creatormode"
          )
        }
      )}
    >
      {(hasVariant(variants, "creatormode", "creatormode") ? true : true) ? (
        <LbCategoryButton
          data-plasmic-name={"toptenbutton"}
          data-plasmic-override={overrides.toptenbutton}
          className={classNames("__wab_instance", sty.toptenbutton, {
            [sty.toptenbuttoncreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            )
          })}
          selected={true}
        />
      ) : null}
      {(hasVariant(variants, "creatormode", "creatormode") ? true : false) ? (
        <LbCategoryButton
          data-plasmic-name={"toptenbuttoncreator"}
          data-plasmic-override={overrides.toptenbuttoncreator}
          className={classNames("__wab_instance", sty.toptenbuttoncreator, {
            [sty.toptenbuttoncreatorcreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            )
          })}
          selected={true}
        />
      ) : null}
      {(hasVariant(variants, "creatormode", "creatormode") ? true : false) ? (
        <LbCategoryButton
          data-plasmic-name={"influencers"}
          data-plasmic-override={overrides.influencers}
          className={classNames("__wab_instance", sty.influencers, {
            [sty.influencerscreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            )
          })}
        />
      ) : null}
      {(hasVariant(variants, "creatormode", "creatormode") ? true : false) ? (
        <LbCategoryButton
          data-plasmic-name={"blogger"}
          data-plasmic-override={overrides.blogger}
          className={classNames("__wab_instance", sty.blogger, {
            [sty.bloggercreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            )
          })}
        />
      ) : null}
      {(hasVariant(variants, "creatormode", "creatormode") ? true : false) ? (
        <LbCategoryButton
          data-plasmic-name={"celebrity"}
          data-plasmic-override={overrides.celebrity}
          className={classNames("__wab_instance", sty.celebrity, {
            [sty.celebritycreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            )
          })}
        />
      ) : null}
      {(hasVariant(variants, "creatormode", "creatormode") ? true : false) ? (
        <LbCategoryButton
          data-plasmic-name={"youngstars"}
          data-plasmic-override={overrides.youngstars}
          className={classNames("__wab_instance", sty.youngstars, {
            [sty.youngstarscreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            )
          })}
        />
      ) : null}
      {(hasVariant(variants, "creatormode", "creatormode") ? true : false) ? (
        <LbCategoryButton
          data-plasmic-name={"comets"}
          data-plasmic-override={overrides.comets}
          className={classNames("__wab_instance", sty.comets, {
            [sty.cometscreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            )
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "creatormode", "creatormode")
          ? false
          : hasVariant(variants, "loggedin", "loggedin")
          ? true
          : true
      ) ? (
        <LbCategoryButton
          data-plasmic-name={"art"}
          data-plasmic-override={overrides.art}
          buttoninnertext={
            true ? (
              <div
                data-plasmic-name={"text"}
                data-plasmic-override={overrides.text}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text
                )}
              >
                {"Top 10"}
              </div>
            ) : null
          }
          className={classNames("__wab_instance", sty.art, {
            [sty.artcreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            ),

            [sty.artloggedin]: hasVariant(variants, "loggedin", "loggedin")
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "creatormode", "creatormode")
          ? false
          : hasVariant(variants, "loggedin", "loggedin")
          ? true
          : true
      ) ? (
        <LbCategoryButton
          data-plasmic-name={"music"}
          data-plasmic-override={overrides.music}
          className={classNames("__wab_instance", sty.music, {
            [sty.musiccreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            ),

            [sty.musicloggedin]: hasVariant(variants, "loggedin", "loggedin")
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "creatormode", "creatormode")
          ? false
          : hasVariant(variants, "loggedin", "loggedin")
          ? true
          : true
      ) ? (
        <LbCategoryButton
          data-plasmic-name={"dance"}
          data-plasmic-override={overrides.dance}
          className={classNames("__wab_instance", sty.dance, {
            [sty.dancecreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            ),

            [sty.danceloggedin]: hasVariant(variants, "loggedin", "loggedin")
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "creatormode", "creatormode")
          ? false
          : hasVariant(variants, "loggedin", "loggedin")
          ? true
          : true
      ) ? (
        <LbCategoryButton
          data-plasmic-name={"sports"}
          data-plasmic-override={overrides.sports}
          className={classNames("__wab_instance", sty.sports, {
            [sty.sportscreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            ),

            [sty.sportsloggedin]: hasVariant(variants, "loggedin", "loggedin")
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "creatormode", "creatormode")
          ? false
          : hasVariant(variants, "loggedin", "loggedin")
          ? true
          : true
      ) ? (
        <LbCategoryButton
          data-plasmic-name={"gaming"}
          data-plasmic-override={overrides.gaming}
          className={classNames("__wab_instance", sty.gaming, {
            [sty.gamingcreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            ),

            [sty.gamingloggedin]: hasVariant(variants, "loggedin", "loggedin")
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "creatormode", "creatormode")
          ? false
          : hasVariant(variants, "loggedin", "loggedin")
          ? true
          : true
      ) ? (
        <LbCategoryButton
          data-plasmic-name={"skits"}
          data-plasmic-override={overrides.skits}
          className={classNames("__wab_instance", sty.skits, {
            [sty.skitscreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            ),

            [sty.skitsloggedin]: hasVariant(variants, "loggedin", "loggedin")
          })}
        />
      ) : null}
      {(
        hasVariant(variants, "creatormode", "creatormode")
          ? false
          : hasVariant(variants, "loggedin", "loggedin")
          ? true
          : true
      ) ? (
        <LbCategoryButton
          data-plasmic-name={"food"}
          data-plasmic-override={overrides.food}
          className={classNames("__wab_instance", sty.food, {
            [sty.foodcreatormode]: hasVariant(
              variants,
              "creatormode",
              "creatormode"
            ),

            [sty.foodloggedin]: hasVariant(variants, "loggedin", "loggedin")
          })}
        />
      ) : null}
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "toptenbutton",
    "toptenbuttoncreator",
    "influencers",
    "blogger",
    "celebrity",
    "youngstars",
    "comets",
    "art",
    "text",
    "music",
    "dance",
    "sports",
    "gaming",
    "skits",
    "food"
  ],

  toptenbutton: ["toptenbutton"],
  toptenbuttoncreator: ["toptenbuttoncreator"],
  influencers: ["influencers"],
  blogger: ["blogger"],
  celebrity: ["celebrity"],
  youngstars: ["youngstars"],
  comets: ["comets"],
  art: ["art", "text"],
  text: ["text"],
  music: ["music"],
  dance: ["dance"],
  sports: ["sports"],
  gaming: ["gaming"],
  skits: ["skits"],
  food: ["food"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicCategoryscrollbar__ArgProps,
      internalVariantPropNames: PlasmicCategoryscrollbar__VariantProps
    });

    return PlasmicCategoryscrollbar__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCategoryscrollbar";
  } else {
    func.displayName = `PlasmicCategoryscrollbar.${nodeName}`;
  }
  return func;
}

export const PlasmicCategoryscrollbar = Object.assign(
  // Top-level PlasmicCategoryscrollbar renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    toptenbutton: makeNodeComponent("toptenbutton"),
    toptenbuttoncreator: makeNodeComponent("toptenbuttoncreator"),
    influencers: makeNodeComponent("influencers"),
    blogger: makeNodeComponent("blogger"),
    celebrity: makeNodeComponent("celebrity"),
    youngstars: makeNodeComponent("youngstars"),
    comets: makeNodeComponent("comets"),
    art: makeNodeComponent("art"),
    text: makeNodeComponent("text"),
    music: makeNodeComponent("music"),
    dance: makeNodeComponent("dance"),
    sports: makeNodeComponent("sports"),
    gaming: makeNodeComponent("gaming"),
    skits: makeNodeComponent("skits"),
    food: makeNodeComponent("food"),
    // Metadata about props expected for PlasmicCategoryscrollbar
    internalVariantProps: PlasmicCategoryscrollbar__VariantProps,
    internalArgProps: PlasmicCategoryscrollbar__ArgProps
  }
);

export default PlasmicCategoryscrollbar;
/* prettier-ignore-end */
