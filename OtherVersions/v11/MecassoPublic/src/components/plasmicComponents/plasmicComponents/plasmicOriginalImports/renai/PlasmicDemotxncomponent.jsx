// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: q7hWdoDc5Fm3y1TqrPvEG7
// Component: dYT-_E3U63t
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_renai.module.css"; // plasmic-import: q7hWdoDc5Fm3y1TqrPvEG7/projectcss
import sty from "./PlasmicDemotxncomponent.module.css"; // plasmic-import: dYT-_E3U63t/css
import image2YOuiknZ8 from "./images/image2.png"; // plasmic-import: yOuiknZ-8/picture
import image3X81IJz2XM from "./images/image3.png"; // plasmic-import: x81iJZ2xM/picture

export const PlasmicDemotxncomponent__VariantProps = new Array();

export const PlasmicDemotxncomponent__ArgProps = new Array(
  "profilepic4",
  "profilepic2",
  "profilepic5",
  "profilepic3",
  "profilepic6"
);

function PlasmicDemotxncomponent__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__qdkdV)}>
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__rPcKn)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__dAfT4)}>
                {p.renderPlasmicSlot({
                  defaultContents: (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___7P5Sw)}
                      displayHeight={"38px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"38px"}
                      loading={"lazy"}
                      src={{
                        src: image2YOuiknZ8,
                        fullWidth: 500,
                        fullHeight: 750,
                        aspectRatio: undefined
                      }}
                    />
                  ),

                  value: args.profilepic4
                })}
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yPury)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__guc49)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___950Ji
                      )}
                    >
                      {"Pablo"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vZvvK
                      )}
                    >
                      {"PBO"}
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1Ppca)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rNb8B
                      )}
                    >
                      {"-"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v6A1
                      )}
                    >
                      {"1200"}
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>
            ) : null}
          </div>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__f7Vz9)}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__jadrd)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aNqTd
                  )}
                >
                  {"To"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cqoDm
                  )}
                >
                  {"0xa58u1..."}
                </div>
              </div>
            ) : null}
          </p.Stack>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___756Tq)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oLu6J
              )}
            >
              {"SEND"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___2DiGq
              )}
            >
              {"12-02-2022"}
            </div>
          </p.Stack>
        ) : null}
      </div>

      <div className={classNames(projectcss.all, sty.freeBox__opsZz)}>
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__jqVG)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__unUcT)}>
                {p.renderPlasmicSlot({
                  defaultContents: (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__awsq)}
                      displayHeight={"35px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"35px"}
                      loading={"lazy"}
                      src={{
                        src: image3X81IJz2XM,
                        fullWidth: 500,
                        fullHeight: 333,
                        aspectRatio: undefined
                      }}
                    />
                  ),

                  value: args.profilepic2
                })}
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ixt3E)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sie1H)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gIqEn
                      )}
                    >
                      {"Evan"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gF2Xu
                      )}
                    >
                      {"EVN"}
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gk4FN)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hNd3A
                      )}
                    >
                      {"+"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jb0YT
                      )}
                    >
                      {"960"}
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>
            ) : null}
          </div>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__ieVmr)}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__khEdP)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nv28I
                  )}
                >
                  {"From"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rjPsU
                  )}
                >
                  {"0xb5451.."}
                </div>
              </div>
            ) : null}
          </p.Stack>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__iScX)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nqAus
              )}
            >
              {"BUY"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__zSir
              )}
            >
              {"12-02-2022"}
            </div>
          </p.Stack>
        ) : null}
      </div>

      <div className={classNames(projectcss.all, sty.freeBox__gMweB)}>
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__eeyWm)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___8T1P2)}>
                {p.renderPlasmicSlot({
                  defaultContents: (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___2GXn1)}
                      displayHeight={"38px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"38px"}
                      loading={"lazy"}
                      src={{
                        src: image2YOuiknZ8,
                        fullWidth: 500,
                        fullHeight: 750,
                        aspectRatio: undefined
                      }}
                    />
                  ),

                  value: args.profilepic5
                })}
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__b6Jxl)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ebvo1)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__drBvn
                      )}
                    >
                      {"Pablo"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eJmi9
                      )}
                    >
                      {"PBO"}
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__mknyQ)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mwsvh
                      )}
                    >
                      {"-"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eCsz
                      )}
                    >
                      {"1200"}
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>
            ) : null}
          </div>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__shmXi)}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__m1KsN)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vq5Tl
                  )}
                >
                  {"To"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tX26
                  )}
                >
                  {"0xf45c6..."}
                </div>
              </div>
            ) : null}
          </p.Stack>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___23Gan)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iMlzL
              )}
            >
              {"SEND"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hgfab
              )}
            >
              {"12-02-2022"}
            </div>
          </p.Stack>
        ) : null}
      </div>

      <div className={classNames(projectcss.all, sty.freeBox__ePh7U)}>
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__ybGbR)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__fcA3U)}>
                {p.renderPlasmicSlot({
                  defaultContents: (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__fxwlK)}
                      displayHeight={"35px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"35px"}
                      loading={"lazy"}
                      src={{
                        src: image3X81IJz2XM,
                        fullWidth: 500,
                        fullHeight: 333,
                        aspectRatio: undefined
                      }}
                    />
                  ),

                  value: args.profilepic3
                })}
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3WuIs)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1Fw6O)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gnd5X
                      )}
                    >
                      {"Evan"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3BkAn
                      )}
                    >
                      {"EVN"}
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__brou)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__j0DD2
                      )}
                    >
                      {"+"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1Adyb
                      )}
                    >
                      {"960"}
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>
            ) : null}
          </div>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___2S3B9)}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__atgtO)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xVofo
                  )}
                >
                  {"From"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__l3VBp
                  )}
                >
                  {"0xa58u1..."}
                </div>
              </div>
            ) : null}
          </p.Stack>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___3Iygm)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kye4S
              )}
            >
              {"BUY"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__cpzHx
              )}
            >
              {"12-02-2022"}
            </div>
          </p.Stack>
        ) : null}
      </div>

      <div className={classNames(projectcss.all, sty.freeBox__yf9K)}>
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__zWt39)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__pbDi)}>
                {p.renderPlasmicSlot({
                  defaultContents: (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__iXedL)}
                      displayHeight={"35px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"35px"}
                      loading={"lazy"}
                      src={{
                        src: image3X81IJz2XM,
                        fullWidth: 500,
                        fullHeight: 333,
                        aspectRatio: undefined
                      }}
                    />
                  ),

                  value: args.profilepic6
                })}
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pwf7W)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___419TH)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xBgF
                      )}
                    >
                      {"Evan"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nvXzQ
                      )}
                    >
                      {"EVN"}
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ejS)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jTlpi
                      )}
                    >
                      {"+"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eDo2M
                      )}
                    >
                      {"960"}
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>
            ) : null}
          </div>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__ody1L)}
          >
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__xjsT)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__e6GBv
                  )}
                >
                  {"From"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hk6W1
                  )}
                >
                  {"0xf45c6..."}
                </div>
              </div>
            ) : null}
          </p.Stack>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__kBeE)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__crw2M
              )}
            >
              {"BUY"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__exeC0
              )}
            >
              {"12-02-2022"}
            </div>
          </p.Stack>
        ) : null}
      </div>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicDemotxncomponent__ArgProps,
      internalVariantPropNames: PlasmicDemotxncomponent__VariantProps
    });

    return PlasmicDemotxncomponent__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDemotxncomponent";
  } else {
    func.displayName = `PlasmicDemotxncomponent.${nodeName}`;
  }
  return func;
}

export const PlasmicDemotxncomponent = Object.assign(
  // Top-level PlasmicDemotxncomponent renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicDemotxncomponent
    internalVariantProps: PlasmicDemotxncomponent__VariantProps,
    internalArgProps: PlasmicDemotxncomponent__ArgProps
  }
);

export default PlasmicDemotxncomponent;
/* prettier-ignore-end */
