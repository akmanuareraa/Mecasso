import React, { useEffect } from 'react';
import InputField from './InputField';
import InstallMetamask from './InstallMetamask';
import SendSocTok from "./SendSocTok";
import Web3 from 'web3';
import DonutChartCreator from './DonutChartCreator';

function ManageDAO(props) {

    console.log("brief proposals ManageDAO",props.briefProposals)
      //console.log("DAOlist",props.DAOlist,"length",props.DAOlist.length)
    console.log(props.profilePhoto,"profilePhoto");
      if(props.isWeb3 && props.DAOlist.length == 0 )		
		{
            console.log("Reached here DAOList");
				props.setDAOlist()	
		}


	return (
        
				
				<div className = "bg-box">
				<br></br><br></br>
				
				{				
                props.DAOcontract && props.cap?
                <div>
				<div className = "column is-6 is-offset-1">
				
                <h1 class="title is-1">Manage Community</h1>
				
				<br></br>

                <div className = "columns ">
                
                <div className = "column">
                <a className="button is-danger is-medium " 
                            onClick={() => props.setNav(11)}>
                           Increase Max Token Cap</a>    
                </div>    

                <div className = "column">
                <a className="button is-danger is-medium  " 
                            onClick={() => props.setNav(12)}>
                            Mint Community NFT</a>    
                </div>    

                <div className = "column">
                <a className="button is-danger is-medium  " 
                            onClick={() => props.setNav(13)}>
                           Donate to Social Cause</a>    
                </div>    

                <div className = "column">
                <a className="button is-danger is-medium  " 
                            onClick={() => props.setNav(14)}>
                           Create Other Proposal</a>    
                </div>    
                <br></br><br></br>
                </div>    

                <div className = "columns ">

                <div className = "column is-offset-5">
                <a className="button is-link is-medium  " 
                            onClick={() => props.setNav(19)}>
                           Post News and Updates</a>    
                </div>    

                <div className = "column">
                <a className="button is-link is-medium  " 
                            onClick={() => props.setNav(20)}>
                           Manage Rewards</a>    
                </div>    
                </div>
                </div> 
				<div className = "columns is-centered">
				<h1>Donut Chart</h1>
				<DonutChartCreator 
					balance={props.balance}
					totalSupply={props.totalSupply}
				/>
				</div>
                <br></br><br></br>
                <br></br><br></br>  
                <div className = "column is-8 is-offset-1">
      
                <div className = "columns">
                   
                <div className = "column is-7">

                <h1 class="title is-1">Tokenomics</h1>
                <br></br>      
                
                <div className = "column is-offset-1">   
                <h4 class="title is-4">Maximum Cap</h4>     
                <span class="tag is-light is-large">{props.cap} &nbsp; {props.tokensymbol}</span>
                &nbsp;&nbsp;&nbsp;&nbsp;    
                </div>


                <br></br>  
                    
                <div className = "column is-offset-1">    
                <h4 class="title is-4">Current Circulation</h4>
                <span class="tag is-light is-large">{props.totalSupply} &nbsp; {props.tokensymbol}</span>
                &nbsp;&nbsp;&nbsp;&nbsp;    
                </div>

                <br></br>

                
                
                <div className = "column is-offset-1">
                <h4 class="title is-4">User's Balance</h4>
                <span class="tag is-light is-large">{Web3.utils.fromWei(props.balance.toString())} &nbsp; {props.tokensymbol}</span>
                &nbsp;&nbsp;&nbsp;&nbsp;    
                <a className="button is-link is-outlined is-medium  " 
                    onClick={() => props.setNav(17)}>
                    Send {props.tokensymbol}</a>    
                    
                </div>
                
                    
                <br></br> 
                
                <div className = "column is-offset-1">
                <h4 class="title is-4">Charm Balance</h4>
                <span class="tag is-light is-large">{props.charmBalance} &nbsp; CHRM</span>
                &nbsp;&nbsp;&nbsp;&nbsp;    
                </div>

                
                
                </div>

                 

                <div className = "column is-6">
                <h1 class="title is-1">Latest Proposals</h1>
                 
                <table className="table">
                <thead>
                <tr>
                <th><abbr title="ProposalID">ID</abbr></th>
                <th><abbr title="Heading">Title</abbr></th>
                <th><abbr title="Status">Status</abbr></th>
                <th><abbr title="votingDeadline">Deadline</abbr></th>
                <th><abbr title="action">Action</abbr></th>             
               </tr>
               </thead>
                
                {
                        props.briefProposals.map((proposal,index) => {
					
							
							return (
                            <tbody key={index}>
                            <tr>
                            <th>{proposal.proposalID}</th>
                            <td>{proposal.heading}</td>
                            <td>{proposal.status? "Open" : "Closed"}</td>
                            <td>{proposal.deadline}</td>
                            <td>                
                            <a className="button is-link is-small  " 
                            onClick={() => props.viewactiveProposal(index)}>
                            Vote</a>    
                            </td>
                            </tr>
                            </tbody>
                              
                            )
                            })
                }
                
                </table>
                <div className = "column">
                <a className="button is-link is-small  " 
                            onClick={() => props.setNav(18)}>
                            View all Proposals</a>    
                </div>   
                <br></br>
                </div>
                </div>
                </div>
                </div>:

                
                !props.isWeb3?
                <div className ="bg-box" style={{ }}>  
                <br></br><br></br><br></br>
                <div className = "column">
                 <InstallMetamask/>
                <br></br><br></br><br></br><br></br><br></br>
                </div>
                </div>:

                <div className = "column is-6 is-offset-2">
                
                
                
                <h5 class="title is-5 is-renai-invert">        
                 Select a Community
                </h5>   
                
                <div className = "columns is-multiline">    
                {
                        props.DAOlist.map((dao,index) => {
					
							
							return (
                            <div className = "column is-7" key={index}>
                                <div class="card has-text-centered">
                                <div className="box is-light has-text-centered" >
                                    <div class="card-image">
                                        <figure class="image is-96x96px">
                                            <img class="is-rounded" src={props.profilePhoto} alt="Placeholder image"></img>
                                        </figure>
                                    </div>
                                    </div>
                                    
                                    <div class="card-content">
                                         <div class="media">
                            
                                        <div class="column">
                                            Token Name:
                                            <div class="title is-4">{dao.tokenName}</div>
                                            Token Symbol:
                                            <div class="title is-5">{dao.tokenSymbol}</div>
                                            Contract:
                                            <span class="tag is-light"  >{dao.contractAddress}</span>
                                        </div>
                                        
                                        </div>

                                        <div class="content">
                                            <a className="button is-warning   " 
                                            onClick={() => props.setDAO(dao.tokenName,dao.contractAddress)}>
                                            View Community
                                            </a>
                                        </div>
                                    </div>
                                </div>        

    
                            </div>
                            )
                })
            }
                </div>
                <br></br>

                <h3 class="title is-3 is-renai-invert">        
                 --OR--
                </h3>   

                <br></br><br></br>


                <h5 class="title is-5 is-renai-invert">        
                 Enter Community DAO contract address
                </h5>   
                
        
                <InputField onInputChangeUpdateField={props.onInputChangeUpdateField}
                fields={props.fields} name="daocontract" placeholder="0x0000000000000000000000000000000000000"/>  
                <br></br><br></br>

                <a className="button is-renai is-medium " onClick={() => props.setDAO(props.state.fields.daocontract)}>
                    Load DAO Contract
                </a>    
                <br></br><br></br>
                <br></br><br></br>
                <br></br><br></br>
                <br></br><br></br>
                <br></br><br></br>
                <br></br><br></br>
                <br></br><br></br>
                <br></br><br></br>
                <br></br><br></br>
                </div>
				
			}							

				</div>			
		
		
    )
			
}




export default ManageDAO;
